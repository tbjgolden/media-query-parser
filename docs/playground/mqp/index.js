/*! @license media-query-parser v3.0.0-beta.3 - MIT License - Tom Golden (github@tbjgolden.com) */
import{matchCondition as t,matchFeature as r,matchQuery as e,matchQueryList as n}from"./ast/ast.js";import{generateQueryList as a,generateQuery as o,generateCondition as s,generateFeature as i,generateValue as u}from"./generator/generator.js";import{lexer as d}from"./lexer/lexer.js";import{isParserError as l}from"./utils.js";export const parseMediaQueryList=t=>{const r=d(t);return l(r)?r:n(r)};export const parseMediaQuery=t=>{var r,n,a,o;const s=d(t);if(l(s))return s;{const t=e(s);return t&&t.i===s.length?t.t:{_errid:"INVALID_QUERY",start:null!==(n=null===(r=s.at(0))||void 0===r?void 0:r.start)&&void 0!==n?n:0,end:null!==(o=null===(a=s.at(-1))||void 0===a?void 0:a.end)&&void 0!==o?o:0}}};export const parseMediaCondition=r=>{var e,n,a,o;const s=d(r);if(l(s))return s;{const r=t(s);return r&&r.i===s.length?r.t:{_errid:"INVALID_CONDITION",start:null!==(n=null===(e=s.at(0))||void 0===e?void 0:e.start)&&void 0!==n?n:0,end:null!==(o=null===(a=s.at(-1))||void 0===a?void 0:a.end)&&void 0!==o?o:0}}};export const parseMediaFeature=t=>{var e,n,a,o;const s=d(t);if(l(s))return s;{const t=r(s);return t&&t.i===s.length?t.t:{_errid:"INVALID_FEATURE",start:null!==(n=null===(e=s.at(0))||void 0===e?void 0:e.start)&&void 0!==n?n:0,end:null!==(o=null===(a=s.at(-1))||void 0===a?void 0:a.end)&&void 0!==o?o:0}}};export const stringify=t=>{switch(t._t){case"query-list":return a(t);case"query":return o(t);case"condition":return s(t);case"feature":return i(t);default:return u(t)}};export*from"./utils.js";